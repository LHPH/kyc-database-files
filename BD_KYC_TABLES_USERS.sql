DROP TABLE IF EXISTS KYC_LOGIN_USER_INFO;
DROP TABLE IF EXISTS KYC_LOGIN_HISTORIC;
DROP TABLE IF EXISTS KYC_USER;

CREATE TABLE KYC_USER(
    ID SERIAL,
    USERNAME VARCHAR(10) NOT NULL,
    SECRET VARCHAR(100),
    ACTIVE BOOLEAN NOT NULL,
    LOCKED BOOLEAN NOT NULL,
    DATE_CREATION DATE NOT NULL,
    DATE_UPDATED DATE,
    USER_TYPE INTEGER NOT NULL
);

CREATE TABLE KYC_LOGIN_HISTORIC(
	ID SERIAL,
	ID_USER INTEGER,
    IP VARCHAR(20),
    ID_CHANNEL INTEGER,
    ID_SESSION VARCHAR(50),
    ACTIVE_SESSION BOOLEAN,
	DATE_LOGIN TIMESTAMP,
    DATE_CHECKPOINT TIMESTAMP,
    DATE_LOGOUT TIMESTAMP
);

CREATE TABLE KYC_LOGIN_USER_INFO(
    ID_USER INTEGER NOT NULL,
    DATE_FIRST_LOGIN TIMESTAMP,
    DATE_LAST_SUCCESSFUL_LOGIN TIMESTAMP,
    DATE_LAST_FAILURE_LOGIN TIMESTAMP,
    DATE_LOCKED_USER TIMESTAMP,
    FAIL_ATTEMPTS_CURRENT_LOGIN INTEGER
);

ALTER TABLE KYC_USER ADD PRIMARY KEY(ID);
ALTER TABLE KYC_LOGIN_HISTORIC ADD PRIMARY KEY(ID);
ALTER TABLE KYC_LOGIN_USER_INFO ADD PRIMARY KEY(ID_USER);

ALTER TABLE KYC_LOGIN_HISTORIC ADD CONSTRAINT FK_KYC_LOGIN_HISTORIC_ID_USER
FOREIGN KEY (ID_USER) REFERENCES KYC_USER(ID) ON DELETE CASCADE;

ALTER TABLE KYC_LOGIN_USER_INFO ADD CONSTRAINT FK_KYC_LOGIN_USER_INFO_ID_USER
FOREIGN KEY (ID_USER) REFERENCES KYC_USER(ID) ON DELETE CASCADE;

ALTER TABLE KYC_LOGIN_HISTORIC ADD CONSTRAINT FK_KYC_LOGIN_HISTORIC_ID_CHANNEL
FOREIGN KEY (ID_CHANNEL) REFERENCES KYC_CHANNEL(ID) ON DELETE CASCADE;

ALTER TABLE KYC_USER ADD CONSTRAINT KYC_USER_USER_TYPE
FOREIGN KEY (USER_TYPE) REFERENCES KYC_USER_TYPE(ID) ON DELETE CASCADE;

ALTER TABLE KYC_CUSTOMER ADD CONSTRAINT KYC_CUSTOMER_ID_USER
FOREIGN KEY (ID_USER) REFERENCES KYC_USER(ID) ON DELETE CASCADE;